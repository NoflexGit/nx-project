# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type User {
  id: String!
  email: String!
  name: String!
  createdAt: DateTime!
  role: Role!
  address: String
  phone: String
  avatar: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum Role {
  LANDLORD
  ADMIN
  AGENT
  TENANT
}

type Agent {
  id: String!
  email: String!
  name: String!
  createdAt: DateTime!
  role: Role!
  address: String
  phone: String
  avatar: String
  propertiesCount: Float!
}

type LoginUserResult {
  access_token: String!
}

type Review {
  id: String!
  comment: String!
  rating: Float!
  createdAt: DateTime!
  updatedAt: DateTime!
  user: User!
}

type PropertyReviews {
  list: [Review!]
  count: Int
  average: Float
}

type PropertyDetails {
  id: String!
  price: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  images: [String!]!
  area: Int
  rooms: Int
  bathrooms: Int
  longitude: Float
  latitude: Float
  description: String
}

type Property {
  id: String!
  name: String!
  type: PropertyType!
  address: String!
  createdAt: DateTime!
  previewImg: String
  details: PropertyDetails!
  agent: Agent!
  reviews: PropertyReviews!
  agentId: String!
}

enum PropertyType {
  APARTMENTS
  HOUSE
  COMMERCIAL
}

type Chat {
  id: String!
  messages: [Message!]!
  participants: [Participant!]!
}

type Message {
  id: String!
  text: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Participant {
  id: String!
  userId: String!
  chatId: String!
  user: User!
}

type Query {
  property(id: String!): Property!
  properties: [Property!]!
  user(id: String!): User!
  getChatsByUser(id: String!): [Chat!]!
}

type Mutation {
  login(email: String!, password: String!): LoginUserResult!
  verifyToken(token: String!): User!
  register(name: String!, email: String!, password: String!): User!
  createChat(users: [String!]!): Chat!
}

type Subscription {
  chatCreated: Chat!
}